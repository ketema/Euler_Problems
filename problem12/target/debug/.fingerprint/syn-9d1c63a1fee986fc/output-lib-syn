{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":33496,"byte_end":33497,"line_start":1200,"line_end":1200,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24318,"byte_end":24342,"line_start":867,"line_end":867,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13821,"byte_end":13847,"line_start":469,"line_end":469,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27131,"byte_end":27154,"line_start":965,"line_end":965,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":28312,"byte_end":28335,"line_start":998,"line_end":998,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":47707,"byte_end":49657,"line_start":1468,"line_end":1527,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        outer_attrs: value!({","highlight_start":1,"highlight_end":30},{"text":"            let mut attrs = e.replace_attrs(Vec::new());","highlight_start":1,"highlight_end":57},{"text":"            let outer_attrs = take_outer(&mut attrs);","highlight_start":1,"highlight_end":54},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            outer_attrs","highlight_start":1,"highlight_end":24},{"text":"        }) >>","highlight_start":1,"highlight_end":14},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":41},{"text":"            attrs.extend(e.replace_attrs(Vec::new()));","highlight_start":1,"highlight_end":55},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            e","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13491,"byte_end":13509,"line_start":457,"line_end":457,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":32987,"byte_end":33003,"line_start":1186,"line_end":1186,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1200:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1468:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: value!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut attrs = e.replace_attrs(Vec::new());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1527\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":33496,"byte_end":33497,"line_start":1200,"line_end":1200,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24318,"byte_end":24342,"line_start":867,"line_end":867,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24417,"byte_end":24436,"line_start":869,"line_end":869,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13821,"byte_end":13847,"line_start":469,"line_end":469,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27131,"byte_end":27154,"line_start":965,"line_end":965,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":28312,"byte_end":28335,"line_start":998,"line_end":998,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":47707,"byte_end":49657,"line_start":1468,"line_end":1527,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        outer_attrs: value!({","highlight_start":1,"highlight_end":30},{"text":"            let mut attrs = e.replace_attrs(Vec::new());","highlight_start":1,"highlight_end":57},{"text":"            let outer_attrs = take_outer(&mut attrs);","highlight_start":1,"highlight_end":54},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            outer_attrs","highlight_start":1,"highlight_end":24},{"text":"        }) >>","highlight_start":1,"highlight_end":14},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":41},{"text":"            attrs.extend(e.replace_attrs(Vec::new()));","highlight_start":1,"highlight_end":55},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            e","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13491,"byte_end":13509,"line_start":457,"line_end":457,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":32987,"byte_end":33003,"line_start":1186,"line_end":1186,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1200:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1468:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: value!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut attrs = e.replace_attrs(Vec::new());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1527\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":33496,"byte_end":33497,"line_start":1200,"line_end":1200,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24318,"byte_end":24342,"line_start":867,"line_end":867,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24417,"byte_end":24436,"line_start":869,"line_end":869,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24417,"byte_end":24436,"line_start":869,"line_end":869,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13821,"byte_end":13847,"line_start":469,"line_end":469,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27131,"byte_end":27154,"line_start":965,"line_end":965,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":28312,"byte_end":28335,"line_start":998,"line_end":998,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":47707,"byte_end":49657,"line_start":1468,"line_end":1527,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        outer_attrs: value!({","highlight_start":1,"highlight_end":30},{"text":"            let mut attrs = e.replace_attrs(Vec::new());","highlight_start":1,"highlight_end":57},{"text":"            let outer_attrs = take_outer(&mut attrs);","highlight_start":1,"highlight_end":54},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            outer_attrs","highlight_start":1,"highlight_end":24},{"text":"        }) >>","highlight_start":1,"highlight_end":14},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":41},{"text":"            attrs.extend(e.replace_attrs(Vec::new()));","highlight_start":1,"highlight_end":55},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            e","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13491,"byte_end":13509,"line_start":457,"line_end":457,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":32987,"byte_end":33003,"line_start":1186,"line_end":1186,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1200:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1468:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: value!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut attrs = e.replace_attrs(Vec::new());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1527\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":33496,"byte_end":33497,"line_start":1200,"line_end":1200,"column_start":41,"column_end":42,"is_primary":true,"text":[{"text":"        tap!($i, $name: call!($f) => $e);","highlight_start":41,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24318,"byte_end":24342,"line_start":867,"line_end":867,"column_start":15,"column_end":39,"is_primary":false,"text":[{"text":"        match $subrule!($i, $($args)*) {","highlight_start":15,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24417,"byte_end":24436,"line_start":869,"line_end":869,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24417,"byte_end":24436,"line_start":869,"line_end":869,"column_start":18,"column_end":37,"is_primary":false,"text":[{"text":"            _ => alt!($i, $($rest)*)","highlight_start":18,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13821,"byte_end":13847,"line_start":469,"line_end":469,"column_start":19,"column_end":45,"is_primary":false,"text":[{"text":"            match $submac!(input, $($args)*) {","highlight_start":19,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27131,"byte_end":27154,"line_start":965,"line_end":965,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":28312,"byte_end":28335,"line_start":998,"line_end":998,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2879,"byte_end":2901,"line_start":83,"line_end":83,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":47707,"byte_end":49657,"line_start":1468,"line_end":1527,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(","highlight_start":5,"highlight_end":83},{"text":"        mut e: call!(atom_expr, allow_struct, allow_block) >>","highlight_start":1,"highlight_end":62},{"text":"        outer_attrs: value!({","highlight_start":1,"highlight_end":30},{"text":"            let mut attrs = e.replace_attrs(Vec::new());","highlight_start":1,"highlight_end":57},{"text":"            let outer_attrs = take_outer(&mut attrs);","highlight_start":1,"highlight_end":54},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            outer_attrs","highlight_start":1,"highlight_end":24},{"text":"        }) >>","highlight_start":1,"highlight_end":14},{"text":"        many0!(alt!(","highlight_start":1,"highlight_end":21},{"text":"            tap!(args: and_call => {","highlight_start":1,"highlight_end":37},{"text":"                let (paren, args) = args;","highlight_start":1,"highlight_end":42},{"text":"                e = ExprCall {","highlight_start":1,"highlight_end":31},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    func: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    args: args,","highlight_start":1,"highlight_end":32},{"text":"                    paren_token: paren,","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(more: and_method_call => {","highlight_start":1,"highlight_end":44},{"text":"                let mut call = more;","highlight_start":1,"highlight_end":37},{"text":"                call.receiver = Box::new(e);","highlight_start":1,"highlight_end":45},{"text":"                e = call.into();","highlight_start":1,"highlight_end":33},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(field: and_field => {","highlight_start":1,"highlight_end":39},{"text":"                let (token, member) = field;","highlight_start":1,"highlight_end":45},{"text":"                e = ExprField {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    base: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    dot_token: token,","highlight_start":1,"highlight_end":38},{"text":"                    member: member,","highlight_start":1,"highlight_end":36},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(i: and_index => {","highlight_start":1,"highlight_end":35},{"text":"                let (bracket, i) = i;","highlight_start":1,"highlight_end":38},{"text":"                e = ExprIndex {","highlight_start":1,"highlight_end":32},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    bracket_token: bracket,","highlight_start":1,"highlight_end":44},{"text":"                    index: Box::new(i),","highlight_start":1,"highlight_end":40},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            tap!(question: punct!(?) => {","highlight_start":1,"highlight_end":42},{"text":"                e = ExprTry {","highlight_start":1,"highlight_end":30},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    expr: Box::new(e),","highlight_start":1,"highlight_end":39},{"text":"                    question_token: question,","highlight_start":1,"highlight_end":46},{"text":"                }.into();","highlight_start":1,"highlight_end":26},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":41},{"text":"            attrs.extend(e.replace_attrs(Vec::new()));","highlight_start":1,"highlight_end":55},{"text":"            e.replace_attrs(attrs);","highlight_start":1,"highlight_end":36},{"text":"            e","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"many0!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":13491,"byte_end":13509,"line_start":457,"line_end":457,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! many0 {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"tap!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":32987,"byte_end":33003,"line_start":1186,"line_end":1186,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! tap {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `tap`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1200:41\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1200\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        tap!($i, $name: call!($f) => $e);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1468:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(trailer_expr(allow_struct: bool, allow_block: bool) -> Expr, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1469\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        mut e: call!(atom_expr, allow_struct, allow_block) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: value!({\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1471\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut attrs = e.replace_attrs(Vec::new());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1527\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `tap`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `tap` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":57321,"byte_end":57436,"line_start":1785,"line_end":1787,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    named!(and_call -> (token::Paren, Punctuated<Expr, Token![,]>),","highlight_start":5,"highlight_end":68},{"text":"        parens!(Punctuated::parse_terminated)","highlight_start":1,"highlight_end":46},{"text":"    );","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1785:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1785\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(and_call -> (token::Paren, Punctuated<Expr, Token![,]>),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1786\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        parens!(Punctuated::parse_terminated)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1787\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    );\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":57472,"byte_end":58483,"line_start":1790,"line_end":1820,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(and_method_call -> ExprMethodCall, do_parse!(","highlight_start":5,"highlight_end":57},{"text":"        dot: punct!(.) >>","highlight_start":1,"highlight_end":26},{"text":"        method: syn!(Ident) >>","highlight_start":1,"highlight_end":31},{"text":"        turbofish: option!(tuple!(","highlight_start":1,"highlight_end":35},{"text":"            punct!(::),","highlight_start":1,"highlight_end":24},{"text":"            punct!(<),","highlight_start":1,"highlight_end":23},{"text":"            call!(Punctuated::parse_terminated),","highlight_start":1,"highlight_end":49},{"text":"            punct!(>),","highlight_start":1,"highlight_end":23},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        args: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            ExprMethodCall {","highlight_start":1,"highlight_end":29},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                // this expr will get overwritten after being returned","highlight_start":1,"highlight_end":71},{"text":"                receiver: Box::new(Expr::Verbatim(ExprVerbatim {","highlight_start":1,"highlight_end":65},{"text":"                    tts: TokenStream::new(),","highlight_start":1,"highlight_end":45},{"text":"                })),","highlight_start":1,"highlight_end":21},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                method: method,","highlight_start":1,"highlight_end":32},{"text":"                turbofish: turbofish.map(|fish| MethodTurbofish {","highlight_start":1,"highlight_end":66},{"text":"                    colon2_token: fish.0,","highlight_start":1,"highlight_end":42},{"text":"                    lt_token: fish.1,","highlight_start":1,"highlight_end":38},{"text":"                    args: fish.2,","highlight_start":1,"highlight_end":34},{"text":"                    gt_token: fish.3,","highlight_start":1,"highlight_end":38},{"text":"                }),","highlight_start":1,"highlight_end":20},{"text":"                args: args.1,","highlight_start":1,"highlight_end":30},{"text":"                paren_token: args.0,","highlight_start":1,"highlight_end":37},{"text":"                dot_token: dot,","highlight_start":1,"highlight_end":32},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1790:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1790\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(and_method_call -> ExprMethodCall, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1791\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        dot: punct!(.) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1792\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        method: syn!(Ident) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1793\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        turbofish: option!(tuple!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1819\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":39109,"byte_end":39110,"line_start":1413,"line_end":1413,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27429,"byte_end":27474,"line_start":974,"line_end":974,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":59567,"byte_end":60331,"line_start":1858,"line_end":1879,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            let_: keyword!(let) >>","highlight_start":1,"highlight_end":35},{"text":"            pats: call!(Punctuated::parse_separated_nonempty) >>","highlight_start":1,"highlight_end":65},{"text":"            eq: punct!(=) >>","highlight_start":1,"highlight_end":29},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIfLet {","highlight_start":1,"highlight_end":25},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                pats: pats,","highlight_start":1,"highlight_end":28},{"text":"                let_token: let_,","highlight_start":1,"highlight_end":33},{"text":"                eq_token: eq,","highlight_start":1,"highlight_end":30},{"text":"                expr: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":38902,"byte_end":38921,"line_start":1407,"line_end":1407,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1413:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1858:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1858\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1859\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1860\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let_: keyword!(let) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1861\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pats: call!(Punctuated::parse_separated_nonempty) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1878\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1879\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":31638,"byte_end":31639,"line_start":1129,"line_end":1129,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        option!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27429,"byte_end":27474,"line_start":974,"line_end":974,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":59567,"byte_end":60331,"line_start":1858,"line_end":1879,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            let_: keyword!(let) >>","highlight_start":1,"highlight_end":35},{"text":"            pats: call!(Punctuated::parse_separated_nonempty) >>","highlight_start":1,"highlight_end":65},{"text":"            eq: punct!(=) >>","highlight_start":1,"highlight_end":29},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIfLet {","highlight_start":1,"highlight_end":25},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                pats: pats,","highlight_start":1,"highlight_end":28},{"text":"                let_token: let_,","highlight_start":1,"highlight_end":33},{"text":"                eq_token: eq,","highlight_start":1,"highlight_end":30},{"text":"                expr: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"option!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":31243,"byte_end":31262,"line_start":1118,"line_end":1118,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! option {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `option`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1129:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        option!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1858:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1858\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1859\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1860\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let_: keyword!(let) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1861\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pats: call!(Punctuated::parse_separated_nonempty) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1878\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1879\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `option`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `option` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":39109,"byte_end":39110,"line_start":1413,"line_end":1413,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27429,"byte_end":27474,"line_start":974,"line_end":974,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":60507,"byte_end":61048,"line_start":1888,"line_end":1903,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIf {","highlight_start":1,"highlight_end":22},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                cond: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":38902,"byte_end":38921,"line_start":1407,"line_end":1407,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1413:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1888:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1888\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1890\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            cond: expr_no_struct >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1891\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            then_block: braces!(Block::parse_within) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1902\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1903\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":31638,"byte_end":31639,"line_start":1129,"line_end":1129,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        option!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27429,"byte_end":27474,"line_start":974,"line_end":974,"column_start":9,"column_end":54,"is_primary":false,"text":[{"text":"        do_parse!($i, $field: call!($e) >> $($rest)*)","highlight_start":9,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":60507,"byte_end":61048,"line_start":1888,"line_end":1903,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            if_: keyword!(if) >>","highlight_start":1,"highlight_end":33},{"text":"            cond: expr_no_struct >>","highlight_start":1,"highlight_end":36},{"text":"            then_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":56},{"text":"            else_block: option!(else_block) >>","highlight_start":1,"highlight_end":47},{"text":"            (ExprIf {","highlight_start":1,"highlight_end":22},{"text":"                attrs: Vec::new(),","highlight_start":1,"highlight_end":35},{"text":"                cond: Box::new(cond),","highlight_start":1,"highlight_end":38},{"text":"                then_branch: Block {","highlight_start":1,"highlight_end":37},{"text":"                    brace_token: then_block.0,","highlight_start":1,"highlight_end":47},{"text":"                    stmts: then_block.1,","highlight_start":1,"highlight_end":41},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                if_token: if_,","highlight_start":1,"highlight_end":31},{"text":"                else_branch: else_block,","highlight_start":1,"highlight_end":41},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"option!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":31243,"byte_end":31262,"line_start":1118,"line_end":1118,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! option {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `option`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1129:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        option!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1888:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1888\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1889\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if_: keyword!(if) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1890\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            cond: expr_no_struct >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1891\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            then_block: braces!(Block::parse_within) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1902\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1903\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `option`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `option` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":39109,"byte_end":39110,"line_start":1413,"line_end":1413,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":25489,"byte_end":25513,"line_start":903,"line_end":903,"column_start":9,"column_end":33,"is_primary":false,"text":[{"text":"        $subrule!($i, $($args)*)","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24756,"byte_end":24775,"line_start":877,"line_end":877,"column_start":46,"column_end":65,"is_primary":false,"text":[{"text":"            ::std::result::Result::Err(_) => alt!($i, $($rest)*),","highlight_start":46,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24756,"byte_end":24775,"line_start":877,"line_end":877,"column_start":46,"column_end":65,"is_primary":false,"text":[{"text":"            ::std::result::Result::Err(_) => alt!($i, $($rest)*),","highlight_start":46,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":61188,"byte_end":61818,"line_start":1911,"line_end":1930,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(else_block -> (Token![else], Box<Expr>), do_parse!(","highlight_start":5,"highlight_end":63},{"text":"        else_: keyword!(else) >>","highlight_start":1,"highlight_end":33},{"text":"        expr: alt!(","highlight_start":1,"highlight_end":20},{"text":"            syn!(ExprIf) => { Expr::If }","highlight_start":1,"highlight_end":41},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            syn!(ExprIfLet) => { Expr::IfLet }","highlight_start":1,"highlight_end":47},{"text":"            |","highlight_start":1,"highlight_end":14},{"text":"            do_parse!(","highlight_start":1,"highlight_end":23},{"text":"                else_block: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":60},{"text":"                (Expr::Block(ExprBlock {","highlight_start":1,"highlight_end":41},{"text":"                    attrs: Vec::new(),","highlight_start":1,"highlight_end":39},{"text":"                    block: Block {","highlight_start":1,"highlight_end":35},{"text":"                        brace_token: else_block.0,","highlight_start":1,"highlight_end":51},{"text":"                        stmts: else_block.1,","highlight_start":1,"highlight_end":45},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                }))","highlight_start":1,"highlight_end":20},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        ) >>","highlight_start":1,"highlight_end":13},{"text":"        (else_, Box::new(expr))","highlight_start":1,"highlight_end":32},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"alt!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":24127,"byte_end":24143,"line_start":861,"line_end":861,"column_start":1,"column_end":17,"is_primary":false,"text":[{"text":"macro_rules! alt {","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":38902,"byte_end":38921,"line_start":1407,"line_end":1407,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1413:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:1911:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1911\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(else_block -> (Token![else], Box<Expr>), do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1912\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        else_: keyword!(else) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1913\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        expr: alt!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1914\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            syn!(ExprIf) => { Expr::If }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1929\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (else_, Box::new(expr))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1930\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":39109,"byte_end":39110,"line_start":1413,"line_end":1413,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs","byte_start":80579,"byte_end":80779,"line_start":2534,"line_end":2540,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            stmts: braces!(Block::parse_within) >>","highlight_start":1,"highlight_end":51},{"text":"            (Block {","highlight_start":1,"highlight_end":21},{"text":"                brace_token: stmts.0,","highlight_start":1,"highlight_end":38},{"text":"                stmts: stmts.1,","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":38902,"byte_end":38921,"line_start":1407,"line_end":1407,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1413:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/expr.rs:2534:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2534\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            stmts: braces!(Block::parse_within) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (Block {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2537\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                brace_token: stmts.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2538\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                stmts: stmts.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2539\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2540\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":39109,"byte_end":39110,"line_start":1413,"line_end":1413,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5153,"byte_end":5187,"line_start":189,"line_end":189,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs","byte_start":28325,"byte_end":28521,"line_start":891,"line_end":897,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(UseGroup \"use group\" do_parse!(","highlight_start":5,"highlight_end":48},{"text":"        list: braces!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        (UseGroup {","highlight_start":1,"highlight_end":20},{"text":"            brace_token: list.0,","highlight_start":1,"highlight_end":33},{"text":"            items: list.1,","highlight_start":1,"highlight_end":27},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5036,"byte_end":5059,"line_start":186,"line_end":186,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":38902,"byte_end":38921,"line_start":1407,"line_end":1407,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1413:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs:891:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m891\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(UseGroup \"use group\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m892\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        list: braces!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m893\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (UseGroup {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m894\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            brace_token: list.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m895\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            items: list.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m896\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m897\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5153,"byte_end":5187,"line_start":189,"line_end":189,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs","byte_start":29883,"byte_end":31349,"line_start":947,"line_end":990,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(ItemFn \"fn item\" do_parse!(","highlight_start":5,"highlight_end":44},{"text":"        outer_attrs: many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":55},{"text":"        vis: syn!(Visibility) >>","highlight_start":1,"highlight_end":33},{"text":"        constness: option!(keyword!(const)) >>","highlight_start":1,"highlight_end":47},{"text":"        unsafety: option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":47},{"text":"        abi: option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":35},{"text":"        fn_: keyword!(fn) >>","highlight_start":1,"highlight_end":29},{"text":"        ident: syn!(Ident) >>","highlight_start":1,"highlight_end":30},{"text":"        generics: syn!(Generics) >>","highlight_start":1,"highlight_end":36},{"text":"        inputs: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":57},{"text":"        ret: syn!(ReturnType) >>","highlight_start":1,"highlight_end":33},{"text":"        where_clause: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":52},{"text":"        inner_attrs_stmts: braces!(tuple!(","highlight_start":1,"highlight_end":43},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within),","highlight_start":1,"highlight_end":40},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (ItemFn {","highlight_start":1,"highlight_end":18},{"text":"            attrs: {","highlight_start":1,"highlight_end":21},{"text":"                let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":45},{"text":"                attrs.extend((inner_attrs_stmts.1).0);","highlight_start":1,"highlight_end":55},{"text":"                attrs","highlight_start":1,"highlight_end":22},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            vis: vis,","highlight_start":1,"highlight_end":22},{"text":"            constness: constness,","highlight_start":1,"highlight_end":34},{"text":"            unsafety: unsafety,","highlight_start":1,"highlight_end":32},{"text":"            abi: abi,","highlight_start":1,"highlight_end":22},{"text":"            decl: Box::new(FnDecl {","highlight_start":1,"highlight_end":36},{"text":"                fn_token: fn_,","highlight_start":1,"highlight_end":31},{"text":"                paren_token: inputs.0,","highlight_start":1,"highlight_end":39},{"text":"                inputs: inputs.1,","highlight_start":1,"highlight_end":34},{"text":"                output: ret,","highlight_start":1,"highlight_end":29},{"text":"                variadic: None,","highlight_start":1,"highlight_end":32},{"text":"                generics: Generics {","highlight_start":1,"highlight_end":37},{"text":"                    where_clause: where_clause,","highlight_start":1,"highlight_end":48},{"text":"                    ..generics","highlight_start":1,"highlight_end":31},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            }),","highlight_start":1,"highlight_end":16},{"text":"            ident: ident,","highlight_start":1,"highlight_end":26},{"text":"            block: Box::new(Block {","highlight_start":1,"highlight_end":36},{"text":"                brace_token: inner_attrs_stmts.0,","highlight_start":1,"highlight_end":50},{"text":"                stmts: (inner_attrs_stmts.1).1,","highlight_start":1,"highlight_end":48},{"text":"            }),","highlight_start":1,"highlight_end":16},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5036,"byte_end":5059,"line_start":186,"line_end":186,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs:947:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m947\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(ItemFn \"fn item\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m948\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m949\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        vis: syn!(Visibility) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m950\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        constness: option!(keyword!(const)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m989\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m990\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27131,"byte_end":27154,"line_start":965,"line_end":965,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27318,"byte_end":27341,"line_start":969,"line_end":969,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*),","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27318,"byte_end":27341,"line_start":969,"line_end":969,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*),","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs","byte_start":31356,"byte_end":32124,"line_start":992,"line_end":1014,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(unstable_async_fn -> ItemVerbatim, do_parse!(","highlight_start":5,"highlight_end":57},{"text":"        begin: call!(verbatim::grab_cursor) >>","highlight_start":1,"highlight_end":47},{"text":"        many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":42},{"text":"        syn!(Visibility) >>","highlight_start":1,"highlight_end":28},{"text":"        option!(keyword!(const)) >>","highlight_start":1,"highlight_end":36},{"text":"        option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":37},{"text":"        keyword!(async) >>","highlight_start":1,"highlight_end":27},{"text":"        option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":30},{"text":"        keyword!(fn) >>","highlight_start":1,"highlight_end":24},{"text":"        syn!(Ident) >>","highlight_start":1,"highlight_end":23},{"text":"        syn!(Generics) >>","highlight_start":1,"highlight_end":26},{"text":"        parens!(Punctuated::<FnArg, Token![,]>::parse_terminated) >>","highlight_start":1,"highlight_end":69},{"text":"        syn!(ReturnType) >>","highlight_start":1,"highlight_end":28},{"text":"        option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":38},{"text":"        braces!(tuple!(","highlight_start":1,"highlight_end":24},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within),","highlight_start":1,"highlight_end":40},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        end: call!(verbatim::grab_cursor) >>","highlight_start":1,"highlight_end":45},{"text":"        (ItemVerbatim {","highlight_start":1,"highlight_end":24},{"text":"            tts: verbatim::token_range(begin..end),","highlight_start":1,"highlight_end":52},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs:992:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m992\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(unstable_async_fn -> ItemVerbatim, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m993\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        begin: call!(verbatim::grab_cursor) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m994\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m995\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        syn!(Visibility) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1013\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5153,"byte_end":5187,"line_start":189,"line_end":189,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs","byte_start":42463,"byte_end":44426,"line_start":1355,"line_end":1408,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(TraitItemMethod \"method trait item\" do_parse!(","highlight_start":5,"highlight_end":63},{"text":"        outer_attrs: many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":55},{"text":"        constness: option!(keyword!(const)) >>","highlight_start":1,"highlight_end":47},{"text":"        unsafety: option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":47},{"text":"        abi: option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":35},{"text":"        fn_: keyword!(fn) >>","highlight_start":1,"highlight_end":29},{"text":"        ident: syn!(Ident) >>","highlight_start":1,"highlight_end":30},{"text":"        generics: syn!(Generics) >>","highlight_start":1,"highlight_end":36},{"text":"        inputs: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":57},{"text":"        ret: syn!(ReturnType) >>","highlight_start":1,"highlight_end":33},{"text":"        where_clause: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":52},{"text":"        body: option!(braces!(tuple!(","highlight_start":1,"highlight_end":38},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within),","highlight_start":1,"highlight_end":40},{"text":"        ))) >>","highlight_start":1,"highlight_end":15},{"text":"        semi: cond!(body.is_none(), punct!(;)) >>","highlight_start":1,"highlight_end":50},{"text":"        ({","highlight_start":1,"highlight_end":11},{"text":"            let (inner_attrs, stmts) = match body {","highlight_start":1,"highlight_end":52},{"text":"                Some((b, (inner_attrs, stmts))) => (inner_attrs, Some((stmts, b))),","highlight_start":1,"highlight_end":84},{"text":"                None => (Vec::new(), None),","highlight_start":1,"highlight_end":44},{"text":"            };","highlight_start":1,"highlight_end":15},{"text":"            TraitItemMethod {","highlight_start":1,"highlight_end":30},{"text":"                attrs: {","highlight_start":1,"highlight_end":25},{"text":"                    let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":49},{"text":"                    attrs.extend(inner_attrs);","highlight_start":1,"highlight_end":47},{"text":"                    attrs","highlight_start":1,"highlight_end":26},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                sig: MethodSig {","highlight_start":1,"highlight_end":33},{"text":"                    constness: constness,","highlight_start":1,"highlight_end":42},{"text":"                    unsafety: unsafety,","highlight_start":1,"highlight_end":40},{"text":"                    abi: abi,","highlight_start":1,"highlight_end":30},{"text":"                    ident: ident,","highlight_start":1,"highlight_end":34},{"text":"                    decl: FnDecl {","highlight_start":1,"highlight_end":35},{"text":"                        inputs: inputs.1,","highlight_start":1,"highlight_end":42},{"text":"                        output: ret,","highlight_start":1,"highlight_end":37},{"text":"                        fn_token: fn_,","highlight_start":1,"highlight_end":39},{"text":"                        paren_token: inputs.0,","highlight_start":1,"highlight_end":47},{"text":"                        variadic: None,","highlight_start":1,"highlight_end":40},{"text":"                        generics: Generics {","highlight_start":1,"highlight_end":45},{"text":"                            where_clause: where_clause,","highlight_start":1,"highlight_end":56},{"text":"                            ..generics","highlight_start":1,"highlight_end":39},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"                default: stmts.map(|stmts| {","highlight_start":1,"highlight_end":45},{"text":"                    Block {","highlight_start":1,"highlight_end":28},{"text":"                        stmts: stmts.0,","highlight_start":1,"highlight_end":40},{"text":"                        brace_token: stmts.1,","highlight_start":1,"highlight_end":46},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }),","highlight_start":1,"highlight_end":20},{"text":"                semi_token: semi,","highlight_start":1,"highlight_end":34},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5036,"byte_end":5059,"line_start":186,"line_end":186,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs:1355:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(TraitItemMethod \"method trait item\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1356\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1357\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        constness: option!(keyword!(const)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1358\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        unsafety: option!(keyword!(unsafe)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1408\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5153,"byte_end":5187,"line_start":189,"line_end":189,"column_start":13,"column_end":47,"is_primary":false,"text":[{"text":"            named!(parse -> Self, $($parser)+);","highlight_start":13,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs","byte_start":48279,"byte_end":49947,"line_start":1532,"line_end":1579,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    impl_synom!(ImplItemMethod \"method in impl block\" do_parse!(","highlight_start":5,"highlight_end":65},{"text":"        outer_attrs: many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":55},{"text":"        vis: syn!(Visibility) >>","highlight_start":1,"highlight_end":33},{"text":"        defaultness: option!(keyword!(default)) >>","highlight_start":1,"highlight_end":51},{"text":"        constness: option!(keyword!(const)) >>","highlight_start":1,"highlight_end":47},{"text":"        unsafety: option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":47},{"text":"        abi: option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":35},{"text":"        fn_: keyword!(fn) >>","highlight_start":1,"highlight_end":29},{"text":"        ident: syn!(Ident) >>","highlight_start":1,"highlight_end":30},{"text":"        generics: syn!(Generics) >>","highlight_start":1,"highlight_end":36},{"text":"        inputs: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":57},{"text":"        ret: syn!(ReturnType) >>","highlight_start":1,"highlight_end":33},{"text":"        where_clause: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":52},{"text":"        inner_attrs_stmts: braces!(tuple!(","highlight_start":1,"highlight_end":43},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within),","highlight_start":1,"highlight_end":40},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        (ImplItemMethod {","highlight_start":1,"highlight_end":26},{"text":"            attrs: {","highlight_start":1,"highlight_end":21},{"text":"                let mut attrs = outer_attrs;","highlight_start":1,"highlight_end":45},{"text":"                attrs.extend((inner_attrs_stmts.1).0);","highlight_start":1,"highlight_end":55},{"text":"                attrs","highlight_start":1,"highlight_end":22},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            vis: vis,","highlight_start":1,"highlight_end":22},{"text":"            defaultness: defaultness,","highlight_start":1,"highlight_end":38},{"text":"            sig: MethodSig {","highlight_start":1,"highlight_end":29},{"text":"                constness: constness,","highlight_start":1,"highlight_end":38},{"text":"                unsafety: unsafety,","highlight_start":1,"highlight_end":36},{"text":"                abi: abi,","highlight_start":1,"highlight_end":26},{"text":"                ident: ident,","highlight_start":1,"highlight_end":30},{"text":"                decl: FnDecl {","highlight_start":1,"highlight_end":31},{"text":"                    fn_token: fn_,","highlight_start":1,"highlight_end":35},{"text":"                    paren_token: inputs.0,","highlight_start":1,"highlight_end":43},{"text":"                    inputs: inputs.1,","highlight_start":1,"highlight_end":38},{"text":"                    output: ret,","highlight_start":1,"highlight_end":33},{"text":"                    generics: Generics {","highlight_start":1,"highlight_end":41},{"text":"                        where_clause: where_clause,","highlight_start":1,"highlight_end":52},{"text":"                        ..generics","highlight_start":1,"highlight_end":35},{"text":"                    },","highlight_start":1,"highlight_end":23},{"text":"                    variadic: None,","highlight_start":1,"highlight_end":36},{"text":"                },","highlight_start":1,"highlight_end":19},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"            block: Block {","highlight_start":1,"highlight_end":27},{"text":"                brace_token: inner_attrs_stmts.0,","highlight_start":1,"highlight_end":50},{"text":"                stmts: (inner_attrs_stmts.1).1,","highlight_start":1,"highlight_end":48},{"text":"            },","highlight_start":1,"highlight_end":15},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_synom!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/macros.rs","byte_start":5036,"byte_end":5059,"line_start":186,"line_end":186,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"macro_rules! impl_synom {","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs:1532:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1532\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    impl_synom!(ImplItemMethod \"method in impl block\" do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        outer_attrs: many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1534\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        vis: syn!(Visibility) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1535\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        defaultness: option!(keyword!(default)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1579\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `impl_synom` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27131,"byte_end":27154,"line_start":965,"line_end":965,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27318,"byte_end":27341,"line_start":969,"line_end":969,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*),","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27318,"byte_end":27341,"line_start":969,"line_end":969,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*),","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs","byte_start":49954,"byte_end":50772,"line_start":1581,"line_end":1604,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(unstable_async_method -> ImplItemVerbatim, do_parse!(","highlight_start":5,"highlight_end":65},{"text":"        begin: call!(verbatim::grab_cursor) >>","highlight_start":1,"highlight_end":47},{"text":"        many0!(Attribute::parse_outer) >>","highlight_start":1,"highlight_end":42},{"text":"        syn!(Visibility) >>","highlight_start":1,"highlight_end":28},{"text":"        option!(keyword!(default)) >>","highlight_start":1,"highlight_end":38},{"text":"        option!(keyword!(const)) >>","highlight_start":1,"highlight_end":36},{"text":"        option!(keyword!(unsafe)) >>","highlight_start":1,"highlight_end":37},{"text":"        keyword!(async) >>","highlight_start":1,"highlight_end":27},{"text":"        option!(syn!(Abi)) >>","highlight_start":1,"highlight_end":30},{"text":"        keyword!(fn) >>","highlight_start":1,"highlight_end":24},{"text":"        syn!(Ident) >>","highlight_start":1,"highlight_end":23},{"text":"        syn!(Generics) >>","highlight_start":1,"highlight_end":26},{"text":"        parens!(Punctuated::<FnArg, Token![,]>::parse_terminated) >>","highlight_start":1,"highlight_end":69},{"text":"        syn!(ReturnType) >>","highlight_start":1,"highlight_end":28},{"text":"        option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":38},{"text":"        braces!(tuple!(","highlight_start":1,"highlight_end":24},{"text":"            many0!(Attribute::parse_inner),","highlight_start":1,"highlight_end":44},{"text":"            call!(Block::parse_within),","highlight_start":1,"highlight_end":40},{"text":"        )) >>","highlight_start":1,"highlight_end":14},{"text":"        end: call!(verbatim::grab_cursor) >>","highlight_start":1,"highlight_end":45},{"text":"        (ImplItemVerbatim {","highlight_start":1,"highlight_end":28},{"text":"            tts: verbatim::token_range(begin..end),","highlight_start":1,"highlight_end":52},{"text":"        })","highlight_start":1,"highlight_end":11},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/item.rs:1581:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1581\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(unstable_async_method -> ImplItemVerbatim, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        begin: call!(verbatim::grab_cursor) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        many0!(Attribute::parse_outer) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        syn!(Visibility) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1603\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1604\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":39109,"byte_end":39110,"line_start":1413,"line_end":1413,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        braces!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27800,"byte_end":27823,"line_start":983,"line_end":983,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"                do_parse!(i, $($rest)*)","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/derive.rs","byte_start":5600,"byte_end":5832,"line_start":181,"line_end":185,"column_start":5,"column_end":7,"is_primary":false,"text":[{"text":"    named!(data_enum -> (Option<WhereClause>, token::Brace, Punctuated<Variant, Token![,]>), do_parse!(","highlight_start":5,"highlight_end":104},{"text":"        wh: option!(syn!(WhereClause)) >>","highlight_start":1,"highlight_end":42},{"text":"        data: braces!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":55},{"text":"        (wh, data.0, data.1)","highlight_start":1,"highlight_end":29},{"text":"    ));","highlight_start":1,"highlight_end":7}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"braces!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":38902,"byte_end":38921,"line_start":1407,"line_end":1407,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! braces {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `braces`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1413:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        braces!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/derive.rs:181:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    named!(data_enum -> (Option<WhereClause>, token::Brace, Punctuated<Variant, Token![,]>), do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        wh: option!(syn!(WhereClause)) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        data: braces!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m184\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        (wh, data.0, data.1)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `braces`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `braces` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/ty.rs","byte_start":13438,"byte_end":13648,"line_start":439,"line_end":445,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            data: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":59},{"text":"            (TypeTuple {","highlight_start":1,"highlight_end":25},{"text":"                paren_token: data.0,","highlight_start":1,"highlight_end":37},{"text":"                elems: data.1,","highlight_start":1,"highlight_end":31},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/ty.rs:439:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m440\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m441\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (TypeTuple {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                paren_token: data.0,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m443\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                elems: data.1,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m444\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m445\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":37182,"byte_end":37183,"line_start":1341,"line_end":1341,"column_start":31,"column_end":32,"is_primary":true,"text":[{"text":"        parens!($i, call!($f));","highlight_start":31,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":27579,"byte_end":27602,"line_start":978,"line_end":978,"column_start":15,"column_end":38,"is_primary":false,"text":[{"text":"        match $submac!($i, $($args)*) {","highlight_start":15,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2333,"byte_end":2355,"line_start":69,"line_end":69,"column_start":13,"column_end":35,"is_primary":false,"text":[{"text":"            $submac!(i, $($args)*)","highlight_start":13,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/path.rs","byte_start":8430,"byte_end":8748,"line_start":298,"line_end":306,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        named!(parse -> Self, do_parse!(","highlight_start":9,"highlight_end":41},{"text":"            data: parens!(Punctuated::parse_terminated) >>","highlight_start":1,"highlight_end":59},{"text":"            output: call!(ReturnType::without_plus) >>","highlight_start":1,"highlight_end":55},{"text":"            (ParenthesizedGenericArguments {","highlight_start":1,"highlight_end":45},{"text":"                paren_token: data.0,","highlight_start":1,"highlight_end":37},{"text":"                inputs: data.1,","highlight_start":1,"highlight_end":32},{"text":"                output: output,","highlight_start":1,"highlight_end":32},{"text":"            })","highlight_start":1,"highlight_end":15},{"text":"        ));","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"named!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":2160,"byte_end":2178,"line_start":66,"line_end":66,"column_start":1,"column_end":19,"is_primary":false,"text":[{"text":"macro_rules! named {","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"do_parse!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":26823,"byte_end":26844,"line_start":955,"line_end":955,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! do_parse {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"parens!","def_site_span":{"file_name":"/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs","byte_start":36975,"byte_end":36994,"line_start":1335,"line_end":1335,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! parens {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `parens`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/parsers.rs:1341:31\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1341\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        parens!($i, call!($f));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kharri04/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-0.14.9/src/path.rs:298:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m298\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        named!(parse -> Self, do_parse!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m299\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            data: parens!(Punctuated::parse_terminated) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m300\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            output: call!(ReturnType::without_plus) >>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            (ParenthesizedGenericArguments {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m305\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m306\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        ));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `parens`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `parens` which comes from the expansion of the macro `named` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
