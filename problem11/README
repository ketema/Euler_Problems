# Project Euler Problem 11: Greatest Product in a Grid

22 February 2002

In the 2020 grid below, mark four numbers along a diagonal line in red.

08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
The product of these numbers is 26  63  78  14 = 1788696.

What is the greatest product of four adjacent numbers in any direction
(up, down, left, right, or diagonally) in the 2020 grid?

Create a program that will randomly color 4 adjacent numbers in any direction
(up, down, left, right, or diagonally) then output the greatest product of those four numbers.

Implemented in the following languages:

1. C / C++
Strengths: Extremely fast, fine-grained memory control.
Suitability: Great for performance-critical or embedded scenarios. C++ offers more abstraction and easier array handling than C.

2. Java
Strengths: Strong typing, robust standard library, cross-platform.
Suitability: Good for educational, enterprise, or cross-platform needs. Verbose compared to Python, but very reliable.

3. C#
Strengths: Modern syntax, strong typing, good tooling (especially on Windows).
Suitability: Similar to Java, with some modern conveniences.
4. JavaScript / TypeScript
Strengths: Ubiquitous, runs in browsers and on servers (Node.js).
Suitability: Good for quick prototyping, web-based demos, or teaching.
5. Go
Strengths: Simple syntax, fast compilation, good concurrency support.
Suitability: Easy to write and deploy, good for CLI tools and servers.
6. Rust
Strengths: Memory safety without garbage collection, high performance.
Suitability: Excellent for high-performance computing with safety, but has a steeper learning curve.
7. Ruby
Strengths: Concise, expressive, easy to read.
Suitability: Good for scripting and rapid prototyping, similar to Python in developer experience.
8. Swift
Strengths: Modern, safe, fast; great for Apple ecosystems.
Suitability: Can be used for CLI tools and learning, not just iOS/macOS apps.
9. Kotlin
Strengths: Modern, concise, interoperable with Java.
Suitability: Good for both JVM and native applications.
10. Julia
Strengths: Designed for numerical and scientific computing.
Suitability: Especially good for matrix-heavy or mathematical problems.
Other Notable Mentions

- Scala: Functional and object-oriented, runs on the JVM.
- Perl: Good for text processing and scripting.
- Fortran: Old but extremely fast for numerical work.
