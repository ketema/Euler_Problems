=== Problem 11: Benchmarking All Solutions ===
Configuration: 2 warmup runs + 5 timed runs per language

[1;33m=== C ===[0m
[1;33mBenchmarking C...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 119.571ms âœ“[0m
[0;32m    Run 2: 3.809ms âœ“[0m
[0;32m    Run 3: 4.384ms âœ“[0m
[0;32m    Run 4: 4.366ms âœ“[0m
[0;32m    Run 5: 3.741ms âœ“[0m
[0;32mâœ“ C: Mean=27.174ms, Median=4.366ms, StdDev=46.199ms[0m
[1;33m=== C++ ===[0m
[1;33mBenchmarking C++...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 112.358ms âœ“[0m
[0;32m    Run 2: 3.583ms âœ“[0m
[0;32m    Run 3: 3.808ms âœ“[0m
[0;32m    Run 4: 5.058ms âœ“[0m
[0;32m    Run 5: 4.007ms âœ“[0m
[0;32mâœ“ C++: Mean=25.762ms, Median=4.007ms, StdDev=43.300ms[0m
[1;33m=== C# ===[0m
[1;33mBenchmarking C#...[0m
[0;34m  Running 2 warmup iterations...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 246.813ms âœ“[0m
[0;32m    Run 2: 253.036ms âœ“[0m
[0;32m    Run 3: 251.730ms âœ“[0m
[0;32m    Run 4: 252.693ms âœ“[0m
[0;32m    Run 5: 249.145ms âœ“[0m
[0;32mâœ“ C#: Mean=250.683ms, Median=251.730ms, StdDev=2.367ms[0m
[1;33m=== Fortran ===[0m
[1;33mBenchmarking Fortran...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 114.885ms âœ“[0m
[0;32m    Run 2: 4.802ms âœ“[0m
[0;32m    Run 3: 5.439ms âœ“[0m
[0;32m    Run 4: 5.365ms âœ“[0m
[0;32m    Run 5: 4.977ms âœ“[0m
[0;32mâœ“ Fortran: Mean=27.093ms, Median=5.365ms, StdDev=43.896ms[0m
[1;33m=== Go ===[0m
[1;33mBenchmarking Go...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 138.866ms âœ“[0m
[0;32m    Run 2: 6.611ms âœ“[0m
[0;32m    Run 3: 5.048ms âœ“[0m
[0;32m    Run 4: 4.728ms âœ“[0m
[0;32m    Run 5: 6.053ms âœ“[0m
[0;32mâœ“ Go: Mean=32.261ms, Median=6.053ms, StdDev=53.306ms[0m
[1;33m=== Haskell ===[0m
[1;33mBenchmarking Haskell...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 217.722ms âœ“[0m
[0;32m    Run 2: 61.027ms âœ“[0m
[0;32m    Run 3: 60.607ms âœ“[0m
[0;32m    Run 4: 59.192ms âœ“[0m
[0;32m    Run 5: 60.384ms âœ“[0m
[0;32mâœ“ Haskell: Mean=91.786ms, Median=60.607ms, StdDev=62.970ms[0m
[1;33m=== Java ===[0m
[1;33mBenchmarking Java...[0m
[0;34m  Running 2 warmup iterations...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 55.727ms âœ“[0m
[0;32m    Run 2: 54.509ms âœ“[0m
[0;32m    Run 3: 54.480ms âœ“[0m
[0;32m    Run 4: 52.822ms âœ“[0m
[0;32m    Run 5: 54.604ms âœ“[0m
[0;32mâœ“ Java: Mean=54.428ms, Median=54.509ms, StdDev=.928ms[0m
[1;33m=== Julia ===[0m
[1;33mBenchmarking Julia...[0m
[0;34m  Running 2 warmup iterations...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 389.780ms âœ“[0m
[0;32m    Run 2: 379.652ms âœ“[0m
[0;32m    Run 3: 391.056ms âœ“[0m
[0;32m    Run 4: 384.770ms âœ“[0m
[0;32m    Run 5: 379.223ms âœ“[0m
[0;32mâœ“ Julia: Mean=384.896ms, Median=384.770ms, StdDev=4.929ms[0m
[1;33m=== Kotlin ===[0m
[1;33mBenchmarking Kotlin...[0m
[0;34m  Running 2 warmup iterations...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 791.284ms âœ“[0m
[0;32m    Run 2: 394.948ms âœ“[0m
[0;32m    Run 3: 397.795ms âœ“[0m
[0;32m    Run 4: 775.940ms âœ“[0m
[0;32m    Run 5: 822.185ms âœ“[0m
[0;32mâœ“ Kotlin: Mean=636.430ms, Median=775.940ms, StdDev=196.574ms[0m
[1;33m=== Perl ===[0m
[1;33mBenchmarking Perl...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 19.798ms âœ“[0m
[0;32m    Run 2: 17.517ms âœ“[0m
[0;32m    Run 3: 15.986ms âœ“[0m
[0;32m    Run 4: 16.196ms âœ“[0m
[0;32m    Run 5: 15.249ms âœ“[0m
[0;32mâœ“ Perl: Mean=16.949ms, Median=16.196ms, StdDev=1.601ms[0m
[1;33m=== PHP ===[0m
[1;33mBenchmarking PHP...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 41.260ms âœ“[0m
[0;32m    Run 2: 39.578ms âœ“[0m
[0;32m    Run 3: 38.123ms âœ“[0m
[0;32m    Run 4: 39.114ms âœ“[0m
[0;32m    Run 5: 38.725ms âœ“[0m
[0;32mâœ“ PHP: Mean=39.360ms, Median=39.114ms, StdDev=1.063ms[0m
[1;33m=== Python ===[0m
[1;33mBenchmarking Python...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 760.440ms âœ“[0m
[0;32m    Run 2: 666.887ms âœ“[0m
[0;32m    Run 3: 668.879ms âœ“[0m
[0;32m    Run 4: 668.177ms âœ“[0m
[0;32m    Run 5: 668.200ms âœ“[0m
[0;32mâœ“ Python: Mean=686.516ms, Median=668.200ms, StdDev=36.967ms[0m
[1;33m=== Ruby ===[0m
[1;33mBenchmarking Ruby...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 45.651ms âœ“[0m
[0;32m    Run 2: 44.790ms âœ“[0m
[0;32m    Run 3: 44.821ms âœ“[0m
[0;32m    Run 4: 44.634ms âœ“[0m
[0;32m    Run 5: 43.444ms âœ“[0m
[0;32mâœ“ Ruby: Mean=44.668ms, Median=44.790ms, StdDev=.707ms[0m
[1;33m=== Rust ===[0m
[1;33mBenchmarking Rust...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 137.674ms âœ“[0m
[0;32m    Run 2: 4.603ms âœ“[0m
[0;32m    Run 3: 4.891ms âœ“[0m
[0;32m    Run 4: 3.910ms âœ“[0m
[0;32m    Run 5: 4.212ms âœ“[0m
[0;32mâœ“ Rust: Mean=31.058ms, Median=4.603ms, StdDev=53.309ms[0m
[1;33m=== Scala ===[0m
[1;33mBenchmarking Scala...[0m
[0;34m  Running 2 warmup iterations...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 1683.370ms âœ“[0m
[0;32m    Run 2: 1717.481ms âœ“[0m
[0;32m    Run 3: 1731.583ms âœ“[0m
[0;32m    Run 4: 1720.228ms âœ“[0m
[0;32m    Run 5: 1716.237ms âœ“[0m
[0;32mâœ“ Scala: Mean=1713.779ms, Median=1717.481ms, StdDev=16.143ms[0m
[1;33m=== Swift ===[0m
[1;33mBenchmarking Swift...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 124.899ms âœ“[0m
[0;32m    Run 2: 7.002ms âœ“[0m
[0;32m    Run 3: 7.058ms âœ“[0m
[0;32m    Run 4: 7.056ms âœ“[0m
[0;32m    Run 5: 6.205ms âœ“[0m
[0;32mâœ“ Swift: Mean=30.444ms, Median=7.056ms, StdDev=47.228ms[0m
[1;33m=== TypeScript ===[0m
[1;33mBenchmarking TypeScript...[0m
[0;34m  Running 2 warmup iterations...[0m
[0;34m  Running 5 timed iterations...[0m
[0;32m    Run 1: 28.200ms âœ“[0m
[0;32m    Run 2: 27.934ms âœ“[0m
[0;32m    Run 3: 28.769ms âœ“[0m
[0;32m    Run 4: 27.979ms âœ“[0m
[0;32m    Run 5: 28.006ms âœ“[0m
[0;32mâœ“ TypeScript: Mean=28.177ms, Median=28.006ms, StdDev=.309ms[0m

[0;32m=== Benchmarking Complete ===[0m
Results saved to: timings.md

